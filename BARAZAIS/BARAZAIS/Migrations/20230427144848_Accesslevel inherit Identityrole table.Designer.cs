// <auto-generated />
using System;
using BARAZAIS.Data.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BARAZAIS.Migrations
{
    [DbContext(typeof(BarazaContext))]
    [Migration("20230427144848_Accesslevel inherit Identityrole table")]
    partial class AccesslevelinheritIdentityroletable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BARAZAIS.Data.Models.AccessLevelModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.AdjustmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Adjustments");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.BarcodeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Scan")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Barcodes");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.BillModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("HoldId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("HoldId");

                    b.HasIndex("UserId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.BrandModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.CompanyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TIN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.GrnModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ReceiptCode")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UserId");

                    b.ToTable("Grns");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.HoldModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Holds");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.OpenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Opens");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.PriceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductAdjustment", b =>
                {
                    b.Property<int?>("AdjustmentId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("NewStock")
                        .HasColumnType("int");

                    b.Property<int>("OldStock")
                        .HasColumnType("int");

                    b.Property<int>("QtyAdjusted")
                        .HasColumnType("int");

                    b.Property<decimal>("Retail")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("AdjustmentId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAdjustments");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductBill", b =>
                {
                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("OldStock")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "BillId");

                    b.HasIndex("BillId");

                    b.ToTable("ProductBills");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductGrn", b =>
                {
                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("GrnId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("NewStock")
                        .HasColumnType("int");

                    b.Property<int>("OldStock")
                        .HasColumnType("int");

                    b.Property<int>("QtyPurchased")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "GrnId");

                    b.HasIndex("GrnId");

                    b.ToTable("ProductGrns");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductHold", b =>
                {
                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("HoldId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "HoldId");

                    b.HasIndex("HoldId");

                    b.ToTable("ProductHolds");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("TaxId");

                    b.HasIndex("UserId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductOpen", b =>
                {
                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("OpenId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "OpenId");

                    b.HasIndex("OpenId");

                    b.ToTable("ProductOpens");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductPrice", b =>
                {
                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PriceId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("LatestPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("OldStock")
                        .HasColumnType("int");

                    b.Property<int>("QtyClosed")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "PriceId");

                    b.HasIndex("PriceId");

                    b.ToTable("ProductPrices");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.SupplierModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TIN")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VRN")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.TaxModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)");

                    b.Property<double>("Percentage")
                        .HasColumnType("double");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("AccessLevelId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.AdjustmentModel", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.CompanyModel", "Company")
                        .WithMany("Adjustment")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BARAZAIS.Data.Models.UserModel", "User")
                        .WithMany("Adjustment")
                        .HasForeignKey("UserId");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.BarcodeModel", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.CompanyModel", "Company")
                        .WithMany("Barcode")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BARAZAIS.Data.Models.ProductModel", "Product")
                        .WithMany("Barcode")
                        .HasForeignKey("ProductId");

                    b.HasOne("BARAZAIS.Data.Models.UserModel", "User")
                        .WithMany("Barcode")
                        .HasForeignKey("UserId");

                    b.Navigation("Company");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.BillModel", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.CompanyModel", "Company")
                        .WithMany("Bill")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BARAZAIS.Data.Models.HoldModel", "Hold")
                        .WithMany()
                        .HasForeignKey("HoldId");

                    b.HasOne("BARAZAIS.Data.Models.UserModel", "User")
                        .WithMany("Bill")
                        .HasForeignKey("UserId");

                    b.Navigation("Company");

                    b.Navigation("Hold");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.BrandModel", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.CompanyModel", "Company")
                        .WithMany("Brand")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BARAZAIS.Data.Models.UserModel", "User")
                        .WithMany("Brand")
                        .HasForeignKey("UserId");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.CategoryModel", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.CompanyModel", "Company")
                        .WithMany("Category")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BARAZAIS.Data.Models.UserModel", "User")
                        .WithMany("Category")
                        .HasForeignKey("UserId");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.GrnModel", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.CompanyModel", "Company")
                        .WithMany("Grn")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BARAZAIS.Data.Models.SupplierModel", "Supplier")
                        .WithMany("Grn")
                        .HasForeignKey("SupplierId");

                    b.HasOne("BARAZAIS.Data.Models.UserModel", "User")
                        .WithMany("Grn")
                        .HasForeignKey("UserId");

                    b.Navigation("Company");

                    b.Navigation("Supplier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.HoldModel", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.CompanyModel", "Company")
                        .WithMany("Hold")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BARAZAIS.Data.Models.UserModel", "User")
                        .WithMany("Hold")
                        .HasForeignKey("UserId");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.OpenModel", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.CompanyModel", "Company")
                        .WithMany("Open")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BARAZAIS.Data.Models.UserModel", "User")
                        .WithMany("Open")
                        .HasForeignKey("UserId");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.PriceModel", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.CompanyModel", "Company")
                        .WithMany("Price")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BARAZAIS.Data.Models.UserModel", "User")
                        .WithMany("Price")
                        .HasForeignKey("UserId");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductAdjustment", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.AdjustmentModel", "Adjustment")
                        .WithMany("ProductAdjustment")
                        .HasForeignKey("AdjustmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BARAZAIS.Data.Models.ProductModel", "Product")
                        .WithMany("ProductAdjustment")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adjustment");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductBill", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.BillModel", "Bill")
                        .WithMany("ProductBill")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BARAZAIS.Data.Models.ProductModel", "Product")
                        .WithMany("ProductBill")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductGrn", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.GrnModel", "Grn")
                        .WithMany("ProductGrn")
                        .HasForeignKey("GrnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BARAZAIS.Data.Models.ProductModel", "Product")
                        .WithMany("ProductGrn")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grn");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductHold", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.HoldModel", "Hold")
                        .WithMany("ProductHold")
                        .HasForeignKey("HoldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BARAZAIS.Data.Models.ProductModel", "Product")
                        .WithMany("ProductHold")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hold");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductModel", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.BrandModel", "Brand")
                        .WithMany("Product")
                        .HasForeignKey("BrandId");

                    b.HasOne("BARAZAIS.Data.Models.CategoryModel", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryId");

                    b.HasOne("BARAZAIS.Data.Models.CompanyModel", "Company")
                        .WithMany("Product")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BARAZAIS.Data.Models.TaxModel", "Tax")
                        .WithMany("Product")
                        .HasForeignKey("TaxId");

                    b.HasOne("BARAZAIS.Data.Models.UserModel", "User")
                        .WithMany("Product")
                        .HasForeignKey("UserId");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Company");

                    b.Navigation("Tax");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductOpen", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.OpenModel", "Open")
                        .WithMany("ProductOpen")
                        .HasForeignKey("OpenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BARAZAIS.Data.Models.ProductModel", "Product")
                        .WithMany("ProductOpen")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Open");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductPrice", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.PriceModel", "Price")
                        .WithMany("ProductPrice")
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BARAZAIS.Data.Models.ProductModel", "Product")
                        .WithMany("ProductPrice")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Price");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.SupplierModel", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.CompanyModel", "Company")
                        .WithMany("Supplier")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BARAZAIS.Data.Models.UserModel", "User")
                        .WithMany("Supplier")
                        .HasForeignKey("UserId");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.TaxModel", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.CompanyModel", "Company")
                        .WithMany("Tax")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BARAZAIS.Data.Models.UserModel", "User")
                        .WithMany("Tax")
                        .HasForeignKey("UserId");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.UserModel", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.AccessLevelModel", "AccessLevel")
                        .WithMany("Users")
                        .HasForeignKey("AccessLevelId");

                    b.HasOne("BARAZAIS.Data.Models.CompanyModel", "Company")
                        .WithMany("User")
                        .HasForeignKey("CompanyId");

                    b.Navigation("AccessLevel");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.AccessLevelModel", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.AccessLevelModel", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BARAZAIS.Data.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("BARAZAIS.Data.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.AccessLevelModel", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.AdjustmentModel", b =>
                {
                    b.Navigation("ProductAdjustment");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.BillModel", b =>
                {
                    b.Navigation("ProductBill");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.BrandModel", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.CategoryModel", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.CompanyModel", b =>
                {
                    b.Navigation("Adjustment");

                    b.Navigation("Barcode");

                    b.Navigation("Bill");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Grn");

                    b.Navigation("Hold");

                    b.Navigation("Open");

                    b.Navigation("Price");

                    b.Navigation("Product");

                    b.Navigation("Supplier");

                    b.Navigation("Tax");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.GrnModel", b =>
                {
                    b.Navigation("ProductGrn");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.HoldModel", b =>
                {
                    b.Navigation("ProductHold");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.OpenModel", b =>
                {
                    b.Navigation("ProductOpen");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.PriceModel", b =>
                {
                    b.Navigation("ProductPrice");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.ProductModel", b =>
                {
                    b.Navigation("Barcode");

                    b.Navigation("ProductAdjustment");

                    b.Navigation("ProductBill");

                    b.Navigation("ProductGrn");

                    b.Navigation("ProductHold");

                    b.Navigation("ProductOpen");

                    b.Navigation("ProductPrice");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.SupplierModel", b =>
                {
                    b.Navigation("Grn");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.TaxModel", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("BARAZAIS.Data.Models.UserModel", b =>
                {
                    b.Navigation("Adjustment");

                    b.Navigation("Barcode");

                    b.Navigation("Bill");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Grn");

                    b.Navigation("Hold");

                    b.Navigation("Open");

                    b.Navigation("Price");

                    b.Navigation("Product");

                    b.Navigation("Supplier");

                    b.Navigation("Tax");
                });
#pragma warning restore 612, 618
        }
    }
}
