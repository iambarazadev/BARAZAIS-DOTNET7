@inject IDbContextFactory<BarazaContext> MyFactory
@inject NavigationManager Navigation
@inject IHttpContextAccessor Accessor
@inject UserManager<UserModel> UserManager
@inject SignInManager<UserModel> SignInManager
@inject RoleManager<IdentityRole<int>> RoleManager

<AuthorizeView>
    <Authorized>
		<a href="" class="p-0 m-0">
			<ul class="p-0 m-0 d-flex flex-row justify-content-center">
				<li class="m-0 p-0 text-center">
					<img src="img/sketch.png" class="rounded-circle" width="40" style="margin: 1px auto;" />
				</li>
				<li class="m-0 p-0  ms-3">
					@{
						<ul class="p-0 m-0">
							<li class="p-0 m-0 text-white text-capitalize">
								<ul class="p-0 m-0 d-flex flex-row justify-content-start">
									<li class="m-0 me-2">
										@(TempUser?.FirstName)
									</li>
									<li class="m-0">
										@(TempUser?.LastName)
									</li>
								</ul>
							</li>
							<li class="p-0 m-0 text-white-50 text-capitalize" style="font-size:0.8rem;">
								@AccessLevel
							</li>
						</ul>
					}
				</li>
			</ul>
		</a>
		<ul class="p-0 m-0 d-flex flex-row">
			<li class="p-0 m-0">
				<form method="post" action="LoginPage/Logout">
					<button type="submit" class="nav-link btn btn-link text-white">
						<span class="bi bi-box-arrow-in-right text-white fs-4"></span>
					</button>
				</form>
			</li>
		</ul>
    </Authorized>
    <NotAuthorized>
        <a href="LoginPage/Register">Register</a>
        <a href="LoginPage/Login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{

	private UserModel? TempUser = new();
	private string AccessLevel = "--";
	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		if (SignInManager.IsSignedIn(Accessor.HttpContext.User))
		{
			var HoldContext = Accessor.HttpContext.User.Identity.Name;
			if (HoldContext != null)
			{
				TempUser = await UserManager.FindByNameAsync(HoldContext);
				if (TempUser?.Id > 0)
				{
					AccessLevel = (await UserManager.GetRolesAsync(TempUser))
					.ToList()
					.FirstOrDefault();
				}
				else
				{
					Console.WriteLine("its Null Bro");
				}

			}
		}
		else
		{
			await SignInManager.SignOutAsync();
		}

			
	}
}